[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 22.0.1)
[debug] Load.defaultLoad until apply took 189.2206ms
[debug]           Load.loadUnit: plugins took 82.8333ms
[debug]           Load.loadUnit: defsScala took 2.4895ms
[debug] [Loading] Scanning directory C:\Users\Administrator\IdeaProjects\ScalaBasics\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Administrator\IdeaProjects\ScalaBasics\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.2349 ms
[debug]               Load.resolveProject(scalabasics-build) took 58.2093ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalabasics-build, base: C:\Users\Administrator\IdeaProjects\ScalaBasics\project, plugins: List(<none>))) took 112.2367ms
[debug] [Loading] Done in C:\Users\Administrator\IdeaProjects\ScalaBasics\project, returning: (scalabasics-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 144.2092ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.5207ms
[debug]         Load.loadUnit(file:/C:/Users/Administrator/IdeaProjects/ScalaBasics/project/, ...) took 235.5914ms
[debug]       Load.apply: load took 438.7472ms
[debug]       Load.apply: resolveProjects took 5.9606ms
[debug]       Load.apply: finalTransforms took 77.9476ms
[debug]       Load.apply: config.delegates took 7.2383ms
[debug]       Load.apply: Def.make(settings)... took 437.8174ms
[debug]       Load.apply: structureIndex took 104.9085ms
[debug]       Load.apply: mkStreams took 1.3407ms
[info] loading project definition from C:\Users\Administrator\IdeaProjects\ScalaBasics\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5242.187ms
[debug]     Load.loadUnit: defsScala took 0.0044ms
[debug] [Loading] Scanning directory C:\Users\Administrator\IdeaProjects\ScalaBasics
[debug]       Load.loadUnit: mkEval took 5.5836ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9084 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.544ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Administrator\IdeaProjects\ScalaBasics, plugins: List(<none>))) took 6.6773ms
[debug] [Loading] Done in C:\Users\Administrator\IdeaProjects\ScalaBasics, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2815.536ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.0361ms
[debug]   Load.loadUnit(file:/C:/Users/Administrator/IdeaProjects/ScalaBasics/, ...) took 8068.1017ms
[debug] Load.apply: load took 8086.8049ms
[debug] Load.apply: resolveProjects took 0.1321ms
[debug] Load.apply: finalTransforms took 14.7232ms
[debug] Load.apply: config.delegates took 0.3811ms
[debug] Load.apply: Def.make(settings)... took 83.1786ms
[debug] Load.apply: structureIndex took 29.0851ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to ScalaBasics (in build file:/C:/Users/Administrator/IdeaProjects/ScalaBasics/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] 
[info] Here are some highlights of sbt 1.10.0:
[info]   - SIP-51 support for Scala 2.13 evolution
[info]   - Various Zinc fixes
[info]   - ConsistentAnalysisFormat: new Zinc Analysis serialization
[info]   - CommandProgress API
[info] See https://eed3si9n.com/sbt-1.10.0 for full release notes.
[info] Hide the banner for this release by running `skipBanner`.
[info] sbt server started at local:sbt-server-9cfae17cb30926da3d5c
[debug] Writing bsp connection file
[info] started sbt server
